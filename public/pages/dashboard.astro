---
import { app } from "../lib/firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";
import AppLayout from "../layouts/AppLayout.astro";

const auth = getAuth(app);

/* Check current session */
if (!Astro.cookies.has("session")) {
  return Astro.redirect("/signin");
}
const sessionCookie = Astro.cookies.get("session")!.value;
const decodedCookie = await auth.verifySessionCookie(sessionCookie);
const user = await auth.getUser(decodedCookie.uid);

if (!user) {
  return Astro.redirect("/signin");
}

import { getFirestore } from "firebase-admin/firestore";

interface Blog {
  id: string;
  title: string;
  labels: string[];
  author: string;
}

const db = getFirestore(app);
const blogsRef = db.collection("blogs");
// .where("authorid", "==", user.uid);
const blogsSnapshot = await blogsRef.get();
const blogs = blogsSnapshot.docs.map((doc) => ({
  id: doc.id,

  ...doc.data(),
})) as Blog[];
---

<Layout title="Dashboard">
  <AppLayout />
  <h1>List of all your blogs</h1>
  <ul>
    {
      blogs.map((blog) => (
        <li>
          <a href={`/view/${blog.id}`}>
            Title: <strong>{blog.title}</strong>
          </a>
          <span>
            {" "}
            | Labels: <strong>{blog.labels}</strong>
          </span>
          by<strong> {blog.author}</strong>
          <a href={`/blog/${blog.id}`}>Edit</a>
        </li>
      ))
    }
  </ul>
</Layout>
